@model EcommerceApplication.Models.ViewModels.ProductViewModel
@{
    ViewBag.Title = "Edit Product";
}

<div class="row mb-3">
    <div class="col-md-6">
        <h2>Edit Product</h2>
    </div>
    <div class="col-md-6 text-end">
        @Html.ActionLink("Back to Products", "Index", "Products", null, new { @class = "btn btn-secondary" })
    </div>
</div>

<div class="card">
    <div class="card-body">
        @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.CreatedDate)
            @Html.HiddenFor(m => m.Photo)

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        @Html.LabelFor(m => m.ProductName, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ProductName, null, new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.SKU, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.SKU, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.SKU, null, new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.Price, new { @class = "form-label" })
                        <div class="input-group">
                            <span class="input-group-text">$</span>
                            @Html.TextBoxFor(m => m.Price, new { @class = "form-control", type = "number", step = "0.01", min = "0.01" })
                        </div>
                        @Html.ValidationMessageFor(m => m.Price, null, new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.CategoryId, new { @class = "form-label" })
                        <select id="CategoryId" name="CategoryId" class="form-select">
                            <option value="">Select Category</option>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category.Id" @(Model.CategoryId == category.Id ? "selected=\"selected\"" : "")>@category.Name</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(m => m.CategoryId, null, new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.Status, new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.Status, new SelectList(Enum.GetValues(typeof(EcommerceApplication.Domain.Entities.ProductStatus))), new { @class = "form-select" })
                        @Html.ValidationMessageFor(m => m.Status, null, new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.PhotoFile, "Update Product Photo", new { @class = "form-label" })
                        <input type="file" name="PhotoFile" id="PhotoFile" class="form-control" accept=".jpg,.jpeg,.png" />
                        <div class="form-text">Only JPG, JPEG, and PNG files are allowed. Maximum size: 25KB.</div>
                        @Html.ValidationMessageFor(m => m.PhotoFile, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="form-label">Current Photo</label>
                        <div class="border rounded p-2 text-center" style="height: 200px; background-color: #f8f9fa;">
                            @if (!string.IsNullOrEmpty(Model.Photo))
                            {
                                <img id="currentImage" src="~/@Model.Photo" alt="@Model.ProductName" 
                                     style="max-width: 100%; max-height: 100%;" />
                            }
                            else
                            {
                                <div class="text-muted" style="line-height: 180px;">
                                    <i class="bi bi-image"></i> No image uploaded
                                </div>
                            }
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">New Photo Preview</label>
                        <div class="border rounded p-2 text-center" style="height: 200px; background-color: #f8f9fa;">
                            <img id="imagePreview" src="#" alt="Preview" style="max-width: 100%; max-height: 100%; display: none;" />
                            <div id="noImageText" class="text-muted" style="line-height: 180px;">
                                <i class="bi bi-image"></i> No new image selected
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="row">
                            <div class="col-md-6">
                                <label class="form-label">Created Date</label>
                                <input type="text" class="form-control" value="@Model.CreatedDate.ToString("MM/dd/yyyy HH:mm")" readonly />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Last Modified</label>
                                <input type="text" class="form-control" 
                                       value="@(Model.LastModified?.ToString("MM/dd/yyyy HH:mm") ?? "Not modified")" readonly />
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="text-end">
                @Html.ActionLink("Cancel", "Index", "Products", null, new { @class = "btn btn-secondary me-2" })
                <button type="submit" class="btn btn-primary">Update Product</button>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).on('change', '#PhotoFile', function () {
            var file = this.files[0];
            var preview = $('#imagePreview');
            var noImageText = $('#noImageText');
            if (file) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    preview.attr('src', e.target.result).show();
                    noImageText.hide();
                }
                reader.readAsDataURL(file);
            } else {
                preview.hide();
                noImageText.show();
            }
        });
    </script>
} 