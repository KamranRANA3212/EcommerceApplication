@model EcommerceApplication.Models.ViewModels.ProductViewModel

<div class="modal-body">
    <form id="addProductForm" asp-action="Add" method="post" enctype="multipart/form-data">
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="ProductName" class="form-label"></label>
                    <input asp-for="ProductName" class="form-control" />
                    <span asp-validation-for="ProductName" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="SKU" class="form-label"></label>
                    <input asp-for="SKU" class="form-control" />
                    <span asp-validation-for="SKU" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Price" class="form-label"></label>
                    <div class="input-group">
                        <span class="input-group-text">$</span>
                        <input asp-for="Price" class="form-control" type="number" step="0.01" min="0.01" />
                    </div>
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="CategoryId" class="form-label"></label>
                    <select asp-for="CategoryId" class="form-select">
                        <option value="">Select Category</option>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Status" class="form-label"></label>
                    <select asp-for="Status" class="form-select" asp-items="@Html.GetEnumSelectList<EcommerceApplication.Domain.Entities.ProductStatus>()">
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="PhotoFile" class="form-label"></label>
                    <input asp-for="PhotoFile" class="form-control" type="file" accept=".jpg,.jpeg,.png" />
                    <div class="form-text">Only JPG, JPEG, and PNG files are allowed. Maximum size: 25KB.</div>
                    <span asp-validation-for="PhotoFile" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label">Image Preview</label>
                    <div class="border rounded p-2 text-center" style="height: 200px; background-color: #f8f9fa;">
                        <img id="imagePreview" src="#" alt="Preview" style="max-width: 100%; max-height: 100%; display: none;" />
                        <div id="noImageText" class="text-muted" style="line-height: 180px;">
                            <i class="bi bi-image"></i> No image selected
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary">Save Product</button>
        </div>
    </form>
</div>

<script>
    // Image preview functionality
    $('#PhotoFile').on('change', function() {
        var file = this.files[0];
        var preview = $('#imagePreview');
        var noImageText = $('#noImageText');
        
        if (file) {
            // Validate file size (25KB)
            if (file.size > 25 * 1024) {
                alert('File size must be less than 25KB.');
                this.value = '';
                preview.hide();
                noImageText.show();
                return;
            }
            
            // Validate file type
            var allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];
            if (!allowedTypes.includes(file.type)) {
                alert('Only JPG, JPEG, and PNG files are allowed.');
                this.value = '';
                preview.hide();
                noImageText.show();
                return;
            }
            
            var reader = new FileReader();
            reader.onload = function(e) {
                preview.attr('src', e.target.result).show();
                noImageText.hide();
            };
            reader.readAsDataURL(file);
        } else {
            preview.hide();
            noImageText.show();
        }
    });
</script> 