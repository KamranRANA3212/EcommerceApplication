@model EcommerceApplication.Models.ViewModels.ProductListViewModel
@{
    ViewData["Title"] = "Products";
}

@{
    // Add anti-forgery token for AJAX requests
    var token = Html.AntiForgeryToken();
}

<!-- Hidden anti-forgery token for AJAX requests -->
@Html.AntiForgeryToken()

<div class="row mb-3">
    <div class="col-md-6">
        <h2>Product Management</h2>
    </div>
    <div class="col-md-6 text-end">
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProductModal">
            <i class="bi bi-plus"></i> Add Product
        </button>
    </div>
</div>

<!-- Search and Filter Form -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" asp-action="Index" class="row g-3">
            <div class="col-md-4">
                <label for="searchTerm" class="form-label">Search</label>
                <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                       value="@Model.SearchTerm" placeholder="Search by name or SKU...">
            </div>
            <div class="col-md-3">
                <label for="categoryFilter" class="form-label">Category</label>
                <select class="form-select" id="categoryFilter" name="categoryFilter">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.Id" selected="@(Model.CategoryFilter == category.Id)">
                            @category.Name
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">&nbsp;</label>
                <div>
                    <button type="submit" class="btn btn-primary me-2">Search</button>
                    <a asp-action="Index" class="btn btn-secondary">Clear</a>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Products Table -->
<div class="card">
    <div class="card-body">
        @if (Model.Products.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Photo</th>
                            <th>Product Name</th>
                            <th>SKU</th>
                            <th>Price</th>
                            <th>Category</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model.Products)
                        {
                            <tr>
                                <td>
                                    @if (!string.IsNullOrEmpty(product.Photo))
                                    {
                                        <img src="~/@product.Photo" alt="@product.ProductName" 
                                             class="img-thumbnail" style="max-width: 50px; max-height: 50px;" />
                                    }
                                    else
                                    {
                                        <div class="bg-light text-center" style="width: 50px; height: 50px; line-height: 50px;">
                                            <i class="bi bi-image text-muted"></i>
                                        </div>
                                    }
                                </td>
                                <td>@product.ProductName</td>
                                <td><span class="badge bg-secondary">@product.SKU</span></td>
                                <td>@product.Price.ToString("C")</td>
                                <td>@product.CategoryName</td>
                                <td>
                                    <span class="badge @(product.Status == EcommerceApplication.Domain.Entities.ProductStatus.Active ? "bg-success" : "bg-danger")">
                                        @product.Status
                                    </span>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@product.Id" class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-pencil"></i> Edit
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-danger" 
                                                onclick="deleteProduct(@product.Id, '@product.ProductName')">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Product pagination">
                    <ul class="pagination justify-content-center">
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-action="Index" 
                                   asp-route-page="@i" 
                                   asp-route-searchTerm="@Model.SearchTerm" 
                                   asp-route-categoryFilter="@Model.CategoryFilter">@i</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="text-center py-5">
                <i class="bi bi-box text-muted" style="font-size: 3rem;"></i>
                <h4 class="text-muted mt-3">No products found</h4>
                <p class="text-muted">Try adjusting your search criteria or add a new product.</p>
            </div>
        }
    </div>
</div>

<!-- Add Product Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id="addProductModalBody">
                <!-- Modal content will be loaded here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Load add product modal
        $('#addProductModal').on('show.bs.modal', function () {
            $.get('@Url.Action("Add", "Products")', function (data) {
                $('#addProductModalBody').html(data);
            });
        });

        // Handle add product form submission
        $(document).on('submit', '#addProductForm', function (e) {
            e.preventDefault();
            
            var formData = new FormData(this);
            
            $.ajax({
                url: '@Url.Action("Add", "Products")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        $('#addProductModal').modal('hide');
                        location.reload();
                    } else {
                        $('#addProductModalBody').html(response);
                    }
                },
                error: function () {
                    alert('An error occurred while creating the product.');
                }
            });
        });

        // Handle delete product
        function deleteProduct(id, productName) {
            if (confirm('Are you sure you want to delete "' + productName + '"?')) {
                var token = $('input[name="__RequestVerificationToken"]').val();
                $.ajax({
                    url: '@Url.Action("Delete", "Products")',
                    type: 'POST',
                    data: { 
                        id: id,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Delete error:', xhr.responseText);
                        alert('An error occurred while deleting the product.');
                    }
                });
            }
        }

        // SKU uniqueness check
        $(document).on('blur', '#SKU', function () {
            var sku = $(this).val();
            if (sku) {
                $.get('@Url.Action("CheckSku", "Products")', { sku: sku }, function (response) {
                    if (!response.isUnique) {
                        $('#SKU').addClass('is-invalid');
                        if (!$('#sku-error').length) {
                            $('#SKU').after('<div class="invalid-feedback" id="sku-error">SKU must be unique.</div>');
                        }
                    } else {
                        $('#SKU').removeClass('is-invalid');
                        $('#sku-error').remove();
                    }
                });
            }
        });

        // Image preview
        $(document).on('change', '#PhotoFile', function () {
            var file = this.files[0];
            if (file) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imagePreview').attr('src', e.target.result).show();
                };
                reader.readAsDataURL(file);
            }
        });
    </script>
} 