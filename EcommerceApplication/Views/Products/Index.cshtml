@model EcommerceApplication.Models.ViewModels.ProductListViewModel
@{
    ViewBag.Title = "Products";
}

@{
    var token = Html.AntiForgeryToken();
}

@Html.AntiForgeryToken()

<div class="row mb-3">
    <div class="col-md-6">
        <h2>Product Management</h2>
    </div>
    <div class="col-md-6 text-end">
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProductModal">
            <i class="bi bi-plus"></i> Add Product
        </button>
    </div>
</div>

<div class="card mb-4">
    <div class="card-body">
        @using (Html.BeginForm("Index", "Products", FormMethod.Get, new { @class = "row g-3" }))
        {
            <div class="col-md-4">
                <label for="searchTerm" class="form-label">Search</label>
                <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                       value="@Model.SearchTerm" placeholder="Search by name or SKU...">
            </div>
            <div class="col-md-3">
                <label for="categoryFilter" class="form-label">Category</label>
                <select class="form-select" id="categoryFilter" name="categoryFilter">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.Id" @(Model.CategoryFilter == category.Id ? "selected=\"selected\"" : "")>
                            @category.Name
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">&nbsp;</label>
                <div>
                    <button type="submit" class="btn btn-primary me-2">Search</button>
                    @Html.ActionLink("Clear", "Index", "Products", null, new { @class = "btn btn-secondary" })
                </div>
            </div>
        }
    </div>
</div>

<div class="card">
    <div class="card-body">
        @if (Model.Products.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle">
                    <thead>
                        <tr>
                            <th>Photo</th>
                            <th>Name</th>
                            <th>SKU</th>
                            <th>Price</th>
                            <th>Category</th>
                            <th>Status</th>
                            <th>Created</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model.Products)
                        {
                            <tr>
                                <td style="width: 80px;">
                                    <div class="ratio ratio-1x1" style="width: 60px; height: 60px;">
                                        @if (!string.IsNullOrEmpty(product.Photo))
                                        {
                                            <img src="~/@product.Photo" alt="@product.ProductName" class="img-thumbnail" style="object-fit: cover; width: 60px; height: 60px;" />
                                        }
                                        else
                                        {
                                            <div class="d-flex align-items-center justify-content-center bg-light border rounded" style="width: 60px; height: 60px;">
                                                <i class="bi bi-image text-muted"></i>
                                            </div>
                                        }
                                    </div>
                                </td>
                                <td>@product.ProductName</td>
                                <td>@product.SKU</td>
                                <td>@product.Price.ToString("C")</td>
                                <td>@product.CategoryName</td>
                                <td>
                                    @if (product.Status == EcommerceApplication.Domain.Entities.ProductStatus.Active)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Inactive</span>
                                    }
                                </td>
                                <td>@product.CreatedDate.ToString("MM/dd/yyyy")</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        @Html.ActionLink("Edit", "Edit", "Products", new { id = product.Id }, new { @class = "btn btn-sm btn-outline-primary" })
                                        @using (Html.BeginForm("Delete", "Products", FormMethod.Post, new { @class = "d-inline" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.Hidden("id", product.Id)
                                            <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure?');">Delete</button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <nav>
                <ul class="pagination justify-content-center">
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            @Html.ActionLink(i.ToString(), "Index", new { page = i, searchTerm = Model.SearchTerm, categoryFilter = Model.CategoryFilter }, new { @class = "page-link" })
                        </li>
                    }
                </ul>
            </nav>
        }
        else
        {
            <div class="text-center py-5">
                <i class="bi bi-box-seam" style="font-size: 3rem;"></i>
                <p class="mt-3">No products found. Try adjusting your filters or add a new product.</p>
            </div>
        }
    </div>
</div>

<!-- Add Product Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            @Html.Partial("_AddProductModal", new EcommerceApplication.Models.ViewModels.ProductViewModel { Categories = Model.Categories })
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var antiforgeryToken = $('input[name="__RequestVerificationToken"]').val();

            $('#addProductForm').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                var formData = new FormData(this);
                formData.append('__RequestVerificationToken', antiforgeryToken);

                $.ajax({
                    url: '@Url.Action("Add", "Products")',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (result) {
                        if (result.success) {
                            location.reload();
                        } else if (result.html) {
                            $('.modal-content').html(result.html);
                        } else if (result.message) {
                            alert(result.message);
                        }
                    },
                    error: function () {
                        alert('An error occurred while submitting the form.');
                    }
                });
            });

            $(document).on('change', '#PhotoFile', function () {
                var file = this.files[0];
                var preview = $('#imagePreview');
                var noImageText = $('#noImageText');
                if (file) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        preview.attr('src', e.target.result).show();
                        noImageText.hide();
                    }
                    reader.readAsDataURL(file);
                } else {
                    preview.hide();
                    noImageText.show();
                }
            });
        });
    </script>
} 